/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package final_net;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class user extends javax.swing.JFrame {

    /**
     * Creates new form user
     */
    public user() {
        initComponents();
        uploadPHPButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uploadServlet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        ii = new javax.swing.JLabel();
        oo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        img1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        uploadPHPButton = new javax.swing.JButton();
        uploadServlet1 = new javax.swing.JButton();

        uploadServlet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        uploadServlet.setForeground(new java.awt.Color(0, 0, 255));
        uploadServlet.setText("Upload File (servlet)");
        uploadServlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadServletActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("your info : ");

        jLabel2.setText("name :");

        jLabel3.setText("pass :");

        jButton1.setText("change using php");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("id : ");

        oo.setForeground(new java.awt.Color(204, 0, 0));
        oo.setText("employee");

        jLabel5.setText("Rank: ");

        img1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new-york-city-evening-NYCTG0221.jpg"))); // NOI18N
        img1.setText("jLabel6");

        jButton2.setText("choose img");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("change img php");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("change using servlet");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("email : ");

        uploadPHPButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        uploadPHPButton.setForeground(new java.awt.Color(255, 0, 51));
        uploadPHPButton.setText("Upload File (php)");
        uploadPHPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPHPButtonActionPerformed(evt);
            }
        });

        uploadServlet1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        uploadServlet1.setForeground(new java.awt.Color(0, 0, 255));
        uploadServlet1.setText("Upload image (servlet)");
        uploadServlet1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadServlet1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(uploadServlet1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(id)
                                            .addComponent(pass)
                                            .addComponent(jTextField1))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(oo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(img1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(32, 32, 32)
                                .addComponent(jButton3)))
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ii, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(uploadPHPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(61, 215, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadServlet1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(oo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ii, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(uploadPHPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          try {                                         
            // TODO add your handling code here:
            URL url = null;
            String hh ="http://localhost/php/change.php"+"?username1="+name.getText()+"&"+"password1="+pass.getText() +"&"+"id1="+id.getText(); 
            try {
                url = new URL (hh);
            } catch (MalformedURLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            URLConnection urlc = url.openConnection();
            urlc.setAllowUserInteraction(true);
            urlc.setDoInput(true);
            urlc.setDoOutput(true);
            
            //String str = "username1="+name.getText();
          //  String str1 = "password1="+pass.getText();
            OutputStream os = null;
            try {
                os = urlc.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
           // byte [] data = str.getBytes();
            //os.write(data);
            
              // byte [] data2 = str1.getBytes();
          // os.write(data2);
            
            
            InputStream is = urlc.getInputStream();
            String s = "";
            int ch=-1;
            while((ch = is.read()) != -1) {

               
               // System.out.print((char)ch);
          s = s+ (char)ch ;

         
                  
            }
            s=s.trim();
            
             System.out.print(s);
             ii.setText(s);
   
            
            
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
              
        
        
       
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
 String path ; 
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.showDialog(jButton2, "chosee image");
        
         path = fc.getSelectedFile().toString();
            path = path.replaceAll("\\\\", "/");
                     
             
             
         JOptionPane.showMessageDialog(null,path); 
         System.out.print(path);
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
         // TODO add your handling code here:
          try {                                         
            // TODO add your handling code here:
            URL url = null;
            String hh ="http://localhost/php/change_img.php"+"?img1="+path+"&"+"id1="+id.getText(); 
            try {
                url = new URL (hh);
            } catch (MalformedURLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            URLConnection urlc = url.openConnection();
            urlc.setAllowUserInteraction(true);
            urlc.setDoInput(true);
            urlc.setDoOutput(true);
            
            //String str = "username1="+name.getText();
          //  String str1 = "password1="+pass.getText();
            OutputStream os = null;
            try {
                os = urlc.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
           // byte [] data = str.getBytes();
            //os.write(data);
            
              // byte [] data2 = str1.getBytes();
          // os.write(data2);
            
            
            InputStream is = urlc.getInputStream();
            String s = "";
            int ch=-1;
            while((ch = is.read()) != -1) {

               
               // System.out.print((char)ch);
          s = s+ (char)ch ;

         
                  
            }
            s=s.trim();
            
             ImageIcon icon = new ImageIcon(path) ; 
                          Image img = icon.getImage();
                          Image imagee = img.getScaledInstance(img1.getWidth(), img1.getHeight(), Image.SCALE_SMOOTH);
                          ImageIcon ss = new ImageIcon(imagee);
                          
                          img1.setIcon(ss);
         
             System.out.print(s);
            
             JOptionPane.showMessageDialog(null,s);   
             
   
            
            
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
              
  uploadPHPButton.doClick();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        try {                                         
            // TODO add your handling code here:
            URL url = null;
            String hh ="http://localhost/php/change.php"+"?username1="+name.getText()+"&"+"password1="+pass.getText() +"&"+"id1="+id.getText(); 
            try {
                url = new URL (hh);
            } catch (MalformedURLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            URLConnection urlc = url.openConnection();
            urlc.setAllowUserInteraction(true);
            urlc.setDoInput(true);
            urlc.setDoOutput(true);
            
            //String str = "username1="+name.getText();
          //  String str1 = "password1="+pass.getText();
            OutputStream os = null;
            try {
                os = urlc.getOutputStream();
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
           // byte [] data = str.getBytes();
            //os.write(data);
            
              // byte [] data2 = str1.getBytes();
          // os.write(data2);
            
            
            InputStream is = urlc.getInputStream();
            String s = "";
            int ch=-1;
            while((ch = is.read()) != -1) {

               
               // System.out.print((char)ch);
          s = s+ (char)ch ;

         
                  
            }
            s=s.trim();
            
             System.out.print(s);
             ii.setText(s);
   
            
            
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
              
    }//GEN-LAST:event_jButton4ActionPerformed

    private void uploadPHPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPHPButtonActionPerformed
        // TODO add your handling code here:
        //uploadStatusLabel.setText("");
      //  downloadStatusLabel.setText("");
        Path currentDirectory =  Paths.get("");

        String filePathSplit[] ;
        String path = new File("").getAbsolutePath();
        String extention;

        JFileChooser fc = new JFileChooser(new File(path+"\\src\\httpclentserver"));

        int r = fc.showOpenDialog(null);
        ImageIcon imgThisImg = null ;

        // if the user selects a file
        if (r == JFileChooser.APPROVE_OPTION)
        {
            // set the label to the path of the selected file
            String fileName = fc.getSelectedFile().getName();
            String filePath = fc.getSelectedFile().getAbsolutePath();
            filePathSplit = fileName.split("\\.");
            extention  =filePathSplit [1];

            if(extention.equalsIgnoreCase("jpg") || extention.equalsIgnoreCase("png") || extention.equalsIgnoreCase("jpeg"))//||extention.equalsIgnoreCase("txt")||
            // extention.equalsIgnoreCase("pdf"))
        {

            imgThisImg = new ImageIcon(fc.getSelectedFile().getAbsolutePath());
           // img1.setIcon(imgThisImg);
            //                 File img = new File(filePath);
            //                     try {
                //                         uploadImage(fileName , img);
                //                     } catch (IOException ex) {
                //                         Logger.getLogger(Down_Up.class.getName()).log(Level.SEVERE, null, ex);
                //
                uploadPHP2(filePath,extention);
            }

     
            else
            {
                JOptionPane.showMessageDialog(this, "Can't upload this type of files");
            }

        }
        // if the user cancelled the operation

    }//GEN-LAST:event_uploadPHPButtonActionPerformed

    private void uploadServletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadServletActionPerformed
        // TODO add your handling code here:

      //  uploadStatusLabel.setText("");
        //downloadStatusLabel.setText("");
        String filePathSplit[] ;
        String path = new File("").getAbsolutePath();
        String extention;

        JFileChooser fc = new JFileChooser(new File(path+"\\src\\httpclentserver"));

        int r = fc.showOpenDialog(null);
        ImageIcon imgThisImg = null ;

        // if the user selects a file
        if (r == JFileChooser.APPROVE_OPTION)
        {
            // set the label to the path of the selected file
            String fileName = fc.getSelectedFile().getName();
            String filePath = fc.getSelectedFile().getAbsolutePath();
            filePathSplit = fileName.split("\\.");
            extention  =filePathSplit [1];

            if(extention.equalsIgnoreCase("jpg") || extention.equalsIgnoreCase("png") || extention.equalsIgnoreCase("jpeg")||extention.equalsIgnoreCase("txt")||
                extention.equalsIgnoreCase("pdf"))
            {

                imgThisImg = new ImageIcon(fc.getSelectedFile().getAbsolutePath());
               // imgLabel1.setIcon(imgThisImg);
                try {

                    uploadServlet(filePath);
                } catch (IOException ex) {
                    Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }//GEN-LAST:event_uploadServletActionPerformed

    private void uploadServlet1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadServlet1ActionPerformed
        // TODO add your handling code here:

        //uploadStatusLabel.setText("");
       // downloadStatusLabel.setText("");
        String filePathSplit[] ;
        String path = new File("").getAbsolutePath();
        String extention;

        JFileChooser fc = new JFileChooser(new File(path+"\\src\\httpclentserver"));

        int r = fc.showOpenDialog(null);
        ImageIcon imgThisImg = null ;

        // if the user selects a file
        if (r == JFileChooser.APPROVE_OPTION)
        {
            // set the label to the path of the selected file
            String fileName = fc.getSelectedFile().getName();
            String filePath = fc.getSelectedFile().getAbsolutePath();
            filePathSplit = fileName.split("\\.");
            extention  =filePathSplit [1];

            if(extention.equalsIgnoreCase("jpg") || extention.equalsIgnoreCase("png") || extention.equalsIgnoreCase("jpeg")||extention.equalsIgnoreCase("txt")||
                extention.equalsIgnoreCase("pdf"))
            {

                imgThisImg = new ImageIcon(fc.getSelectedFile().getAbsolutePath());
              //  imgLabel1.setIcon(imgThisImg);
                try {

                    uploadServlet(filePath);
                } catch (IOException ex) {
                    Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }

    }//GEN-LAST:event_uploadServlet1ActionPerformed

    
     private void uploadServlet(String filePath) throws IOException {
        
    
        int BUFFER_SIZE = 4096;      
            
       try{
        
         File uploadFile = new File(filePath);

        // creates a HTTP connection
        URL url = new URL("http://127.0.0.1:8086/ServletProjectForHTTPAssignment/Upload_Servlet");
        HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();
        httpConn.setUseCaches(false);
        httpConn.setDoOutput(true);
        httpConn.setRequestMethod("POST");
        // sets file name as a HTTP header
        httpConn.setRequestProperty("fileName", uploadFile.getName());
      
        // opens output stream of the HTTP connection for writing data
        OutputStream outputStream = httpConn.getOutputStream();
 
        // Opens input stream of the file for reading data
        FileInputStream inputStream = new FileInputStream(uploadFile);
 
        byte[] buffer = new byte[BUFFER_SIZE];
        int bytesRead = -1;
 
      
 
        while ((bytesRead = inputStream.read(buffer)) != -1) {
            outputStream.write(buffer, 0, bytesRead);
        }
 
       
        outputStream.close();
        inputStream.close();
 
        // always check HTTP response code from server
        int responseCode = httpConn.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            // reads server's response
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    httpConn.getInputStream()));
            String response = reader.readLine();
          
            //uploadStatusLabel.setText(response);
        } else {
         
             //uploadStatusLabel.setText(responseCode+"");
        }
    }
    
    catch(Exception e){
    System.out.println(e.fillInStackTrace());
}
        
    
    
    
    }
            
    
     private void uploadPHP2(String filePath ,String extention) {  
        String CrLf="\r\n";
        URLConnection conn = null;
        OutputStream os = null;
        InputStream is = null;
        try {
            URL url = null ;
            if(extention.equalsIgnoreCase("jpeg")||extention.equalsIgnoreCase("jpg")||extention.equalsIgnoreCase("png"))
            {
             url = new URL("http://localhost/php/UploadImages.php");
            }
        
       
            conn = url.openConnection();
            conn.setDoOutput(true);

            String postData = "";
            
            // my code
            
            File myFile = new File(filePath);
            //InputStream imgIs = getClass().getResourceAsStream(path);
            byte[] imgData = Files.readAllBytes(myFile.toPath())  ;  //readAllBytes(myFile.toPath());
            //imgIs.read(imgData);

            String message1 = "";
            message1 += "-----------------------------4664151417711" + CrLf;
            message1 += "Content-Disposition: form-data; name=\"uploadedfile\"; filename=\""+myFile.getName()+"\""
                     + CrLf;
            message1 += "Content-Type: image/jpeg" + CrLf;
            message1 += CrLf;

            // the image is sent between the messages in the multipart message.

            String message2 = "";
            message2 += CrLf + "-----------------------------4664151417711--"
                     + CrLf;

            conn.setRequestProperty("Content-Type",
                    "multipart/form-data; boundary=---------------------------4664151417711");
            // might not need to specify the content-length when sending chunked
            // data.
            conn.setRequestProperty("Content-Length", String.valueOf((message1
                    .length() + message2.length() + imgData.length)));

            
            os = conn.getOutputStream();

            
            os.write(message1.getBytes());

            // SEND THE IMAGE
            int index = 0;
            int size = 1024;
            do {
                if ((index + size) > imgData.length) {
                    size = imgData.length - index;
                }
                os.write(imgData, index, size);
                index += size;
            } while (index < imgData.length);

            os.write(message2.getBytes());
            os.flush();
            is = conn.getInputStream();

            char buff = 512;
            int len;
            byte[] data = new byte[buff];
            String read="";
            do {
                len = is.read(data);

                if (len > 0) {
                    read=new String(data, 0, len);
                  // uploadStatusLabel.setText(read);
                    
                }
            } while (len > 0);
            

        } catch (Exception e) {
            e.printStackTrace();
        }
        
        finally {
            try {
                os.close();
            } catch (Exception e) {
            }
            try {
                is.close();
            } catch (Exception e) {
            }
        }
            
     }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new user().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField id;
    private javax.swing.JLabel ii;
    public javax.swing.JLabel img1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    public javax.swing.JTextField name;
    public javax.swing.JLabel oo;
    public javax.swing.JTextField pass;
    private javax.swing.JButton uploadPHPButton;
    private javax.swing.JButton uploadServlet;
    private javax.swing.JButton uploadServlet1;
    // End of variables declaration//GEN-END:variables
}
